import subprocess
import os
import datetime
import time

def log_top_processes():
    with open('/path/to/system_log.txt', 'a') as f:
        f.write("===============================\n")
        f.write(f"Timestamp: {datetime.datetime.now()}\n")
        f.write("===============================\n")
        
        # Get top processes by CPU usage
        top_processes = subprocess.run(['ps', 'aux', '--sort=-%cpu'], stdout=subprocess.PIPE, text=True)
        f.write("Top processes by CPU usage:\n")
        f.write(top_processes.stdout)
        f.write("===============================\n\n")
    
    # Log top PostgreSQL queries taking CPU
    with open('/path/to/postgres_cpu.txt', 'a') as f:
        f.write("===============================\n")
        f.write(f"Timestamp: {datetime.datetime.now()}\n")
        f.write("===============================\n")
        
        # Set the PGPASSWORD environment variable
        os.environ['PGPASSWORD'] = 'your_postgres_password'
        
        postgres_top_queries = subprocess.run(['psql', '-U', 'your_postgres_user', '-d', 'your_database', '-c', 'SELECT pid, query FROM pg_stat_activity WHERE state = \'active\' ORDER BY cpu DESC'], stdout=subprocess.PIPE, text=True)
        f.write("Top PostgreSQL queries by CPU usage:\n")
        f.write(postgres_top_queries.stdout)
        f.write("===============================\n\n")

def main():
    while True:
        log_top_processes()
        time.sleep(60)  # Wait for 60 seconds before checking again

if __name__ == "__main__":
    main()
