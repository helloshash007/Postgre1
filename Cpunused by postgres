import psutil

# Variable to accumulate total CPU utilization for PostgreSQL processes
postgres_cpu_usage = 0.0

# Loop through all processes
for proc in psutil.process_iter():
    try:
        # Get the process name and command line arguments
        process_name = proc.name().lower()
        process_cmd = ' '.join(proc.cmdline()).lower()
        
        # Check if the process is related to PostgreSQL by looking for "postgres" in the name or command
        if "postgres" in process_name or "postgres" in process_cmd:
            # Accumulate the CPU utilization for these processes
            cpu_usage = proc.cpu_percent(interval=0.1)
            postgres_cpu_usage += cpu_usage
    except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
        # Handle cases where the process doesn't exist or isn't accessible
        continue

print(f"Total CPU Utilization by PostgreSQL: {postgres_cpu_usage:.2f}%")
