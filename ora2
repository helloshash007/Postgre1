Hereâ€™s an Ansible playbook to deploy an SQL file to an Oracle database using sqlplus with a full TNS connection string.


---

Ansible Playbook (deploy_oracle_sql.yml)

- name: Deploy SQL artifacts to Oracle
  hosts: oracle_servers
  become: yes
  vars:
    sql_filename: "schema_update.sql"
    sql_local_path: "/tmp/{{ sql_filename }}"
    sql_remote_path: "/tmp/{{ sql_filename }}"
    oracle_user: "oracle"
    oracle_home: "/u01/app/oracle/product/19c/dbhome_1"
    oracle_db_user: "dbuser"
    oracle_db_pass: "dbpassword"
    oracle_host: "your_oracle_host"
    oracle_port: "1521"
    oracle_service: "your_service"

  tasks:
    - name: Copy SQL file to Oracle server
      copy:
        src: "{{ sql_local_path }}"
        dest: "{{ sql_remote_path }}"
        owner: "{{ oracle_user }}"
        mode: '0644'

    - name: Execute SQL script on Oracle
      command: > 
        {{ oracle_home }}/bin/sqlplus {{ oracle_db_user }}/{{ oracle_db_pass }}@"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST={{ oracle_host }})(PORT={{ oracle_port }}))(CONNECT_DATA=(SERVICE_NAME={{ oracle_service }})))" @{{ sql_remote_path }}
      become_user: "{{ oracle_user }}"


---

Inventory (inventory.ini)

[oracle_servers]
oracle_host ansible_host=192.168.1.100 ansible_user=ansible


---

How to Run

ansible-playbook -i inventory.ini deploy_oracle_sql.yml

This will:

1. Copy the SQL file to the Oracle server.


2. Execute it using sqlplus with a full TNS connection.



Let me know if you need modifications!

